(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    203849,       4052]
NotebookOptionsPosition[    201645,       4005]
NotebookOutlinePosition[    202046,       4021]
CellTagsIndexPosition[    202003,       4018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"LPos", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"LDir", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"posEncFeatures", "=", 
   RowBox[{"3", "+", 
    RowBox[{"3", "*", "2", "*", "LPos"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dirEncFeatures", "=", 
   RowBox[{"3", "+", 
    RowBox[{"3", "*", "2", "*", "LDir"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inFeatures", "=", "posEncFeatures"}], ";"}], " ", 
  RowBox[{"(*", "63", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"numNeurons", "=", "256"}], ";"}]}], "Input",
 CellChangeTimes->{{3.924365906833599*^9, 3.924365907978962*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c233de70-4eea-46e6-ae0e-8db52dc13a37"],

Cell[CellGroupData[{

Cell[BoxData["inFeatures"], "Input",
 CellChangeTimes->{{3.924786484551309*^9, 3.924786485935461*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4b8c5bd3-aaf9-4e43-a407-6d047d356672"],

Cell[BoxData["63"], "Output",
 CellChangeTimes->{3.924786486384159*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3f1afec2-2171-4703-8520-713cedd08872"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"earlyMLP", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "->", "inFeatures"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9243659257924633`*^9, 3.924365930706002*^9}, 
   3.9247863654383698`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"6e5aaaed-7cc0-4851-b3c7-c8d0fbb72617"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 63\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 63}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 63, "$InputDimensions" -> {63}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{63}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{63}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 63\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   229.24322916666665`, {114.39296874999998`, 
                    120.97890624999998`}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{256, 63}, NeuralNetworks`RealT],
           "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          63, "$InputDimensions" -> {63}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{63}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "5" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "7" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "9" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "10" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> 
          NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{63}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.1", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924786366297883*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"110d2108-2de0-4d6f-8fe9-3e370435e9fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"laterMLP", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "->", 
     RowBox[{"(", 
      RowBox[{"posEncFeatures", "+", "numNeurons"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924365941094529*^9, 3.924365943280726*^9}, 
   3.92478637619729*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"b68e9f52-ad09-4e8d-91a3-79a620500355"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 319\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 319}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 319, "$InputDimensions" -> {319}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{319}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{319}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 319\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   221.13385416666665`, {74.29765625, 80.88359375}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 319}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          319, "$InputDimensions" -> {319}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{319}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|
       "Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "5" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{256, 256}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {256}, "$OutputSize" -> 256, "$InputSize" -> 
          256, "$InputDimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, 
      "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {256}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> 
          NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{319}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.1", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924786376988426*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ca3182bf-7132-4902-b594-07670642d155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigmaLayer", "=", 
  RowBox[{"LinearLayer", "[", 
   RowBox[{"numNeurons", "+", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924365956632406*^9, 3.924365956632772*^9}, {
   3.924366141533216*^9, 3.92436617217677*^9}, 3.9247863565642138`*^9, 
   3.924786401474669*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"f1120030-1a1a-4484-88ae-c57c6e8c38e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"257\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, 
                    {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 
                    4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 
                    17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25,
                     17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {
                    12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 257\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> 
      NeuralNetworks`TensorT[{257, NeuralNetworks`SizeT}, 
        NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
        NeuralNetworks`TensorT[{257}, NeuralNetworks`RealT]]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {257}, "$OutputSize" -> 257, "$InputSize" -> 
      NeuralNetworks`SizeT, "$InputDimensions" -> 
      NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{257}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.1", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924786402249157*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5930caac-4a4a-4245-a279-633964691779"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"preFinalLayer", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", 
       RowBox[{"Quotient", "[", 
        RowBox[{"numNeurons", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "->", 
     RowBox[{"(", 
      RowBox[{"dirEncFeatures", "+", "numNeurons"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924365956632406*^9, 3.924365956632772*^9}, {
   3.924366141533216*^9, 3.92436617217677*^9}, {3.9247863565642138`*^9, 
   3.924786358062096*^9}, 3.924786413145308*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"5a9b8aba-7daf-4ab6-a59d-62f4305bb908"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 283\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 283}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 283, "$InputDimensions" -> {283}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{283}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{283}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 283\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   221.13385416666665`, {34.20234375, 40.78828125}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{128, 283}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {128}, "$OutputSize" -> 128, "$InputSize" -> 
          283, "$InputDimensions" -> {283}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{283}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {128}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> 
          NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{283}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.1", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.92478641445494*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"9973b399-c4c6-46ca-86d2-890ed9f01fb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"finalLayer", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "3", "]"}], ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<Sigmoid\>\"", "]"}]}], "}"}], 
     ",", 
     RowBox[{"\"\<Input\>\"", "->", 
      RowBox[{"(", 
       RowBox[{"Quotient", "[", 
        RowBox[{"numNeurons", ",", "2"}], "]"}], ")"}]}]}], "]"}]}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.924365956632406*^9, 3.924365956632772*^9}, {
   3.924366141533216*^9, 3.92436617217677*^9}, {3.9247863565642138`*^9, 
   3.924786358062096*^9}, 3.9247864388034554`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"b7eef30c-ebc3-4230-88a0-0c5a47a28760"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13.567734375, {0., 13.567734375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{3, 128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {3}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   246.24713541666665`, {34.20234375, 40.78828125}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{3, 128}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {3}, "$OutputSize" -> 3, "$InputSize" -> 128, 
          "$InputDimensions" -> {128}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
          "$Dimensions" -> {3}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.1", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9247864400451527`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b353236d-9a09-402e-a575-b67fe372ece5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"combinedModel", "=", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<earlyMLP\>\"", "->", "earlyMLP"}], ",", 
        RowBox[{"\"\<laterMLP\>\"", "->", "laterMLP"}], ",", 
        RowBox[{"\"\<sigmaLayer\>\"", "->", "sigmaLayer"}], ",", 
        RowBox[{"\"\<preFinalLayer\>\"", "->", "preFinalLayer"}], ",", 
        RowBox[{"\"\<finalLayer\>\"", "->", "finalLayer"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<earlyMLP\>\"", "->", "\"\<laterMLP\>\""}], ",", 
        RowBox[{"\"\<laterMLP\>\"", "->", "\"\<sigmaLayer\>\""}], ",", 
        RowBox[{"\"\<sigmaLayer\>\"", "->", "\"\<preFinalLayer\>\""}], ",", 
        RowBox[{"\"\<preFinalLayer\>\"", "->", "\"\<finalLayer\>\""}]}], 
       "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "->", "inFeatures"}]}], "]"}]}], ";"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.924366004871307*^9, 3.92436600487167*^9}},
 CellLabel->"In[38]:=",
 CellID->481147660,ExpressionUUID->"78551242-32bc-45b1-ac41-f3445e0f0ba7"],

Cell[BoxData[
 TemplateBox[{
  "NetGraph", "ninctyp2", 
   "\"Incompatible \\!\\(\\*RowBox[{\\\"\\\\\\\"dimension\\\\\\\"\\\"}]\\)s \
for output of \\!\\(\\*RowBox[{\\\"\\\\\\\"node \
\\\\\\\\\\\\\\\"earlyMLP\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"NetChain[\[LeftGuillemet]10\[RightGuillemet]]\\\\\
\\\"\\\"}]\\), and input to \\!\\(\\*RowBox[{\\\"\\\\\\\"node \
\\\\\\\\\\\\\\\"laterMLP\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"NetChain[\[LeftGuillemet]6\[RightGuillemet]]\\\\\
\\\"\\\"}]\\); \\!\\(\\*RowBox[{\\\"\\\\\\\"a length-256 vector of real \
numbers\\\\\\\"\\\"}]\\) is not compatible with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"a length-319 vector of real \
numbers\\\\\\\"\\\"}]\\), respectively.\"", 2, 38, 14, 18983410000434885392, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9243661767900877`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"d79c2d4e-5434-4857-b192-9b7f9a2acdd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "constants", " ", "and", " ", "input", " ", "sizes"}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"LPos", "=", "10"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"LDir", "=", "4"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"posEncFeatures", "=", 
     RowBox[{"3", "+", 
      RowBox[{"3", "*", "2", "*", "LPos"}]}]}], ";"}], " ", 
   RowBox[{"(*", "63", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dirEncFeatures", "=", 
     RowBox[{"3", "+", 
      RowBox[{"3", "*", "2", "*", "LDir"}]}]}], ";"}], " ", 
   RowBox[{"(*", "15", "*)"}], "\n", 
   RowBox[{
    RowBox[{"numNeurons", "=", "256"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "the", " ", "network", " ", "structure"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"network", "=", 
     RowBox[{"NetGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<earlyMLP\>\"", "->", 
          RowBox[{"NetChain", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
              RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
              RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
              RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
              RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
              RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
              RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
              RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
              RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
              RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}],
             ",", 
            RowBox[{"\"\<Input\>\"", "->", "posEncFeatures"}]}], "]"}]}], ",", 
         RowBox[{"\"\<concat\>\"", "->", 
          RowBox[{"CatenateLayer", "[", "]"}]}], ",", 
         RowBox[{"\"\<laterMLP\>\"", "->", 
          RowBox[{"NetChain", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
             RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}], ",", 
             RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"\"\<sigmaLayer\>\"", "->", 
          RowBox[{"LinearLayer", "[", 
           RowBox[{"numNeurons", "+", "1"}], "]"}]}], ",", 
         RowBox[{"\"\<preFinalLayer\>\"", "->", 
          RowBox[{"NetChain", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"LinearLayer", "[", 
              RowBox[{"Quotient", "[", 
               RowBox[{"numNeurons", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", "\"\<ReLU\>\"", "]"}]}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"\"\<finalLayer\>\"", "->", 
          RowBox[{"NetChain", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"LinearLayer", "[", "3", "]"}], ",", 
             RowBox[{"ElementwiseLayer", "[", "\"\<Sigmoid\>\"", "]"}]}], 
            "}"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<earlyMLP\>\"", "->", "\"\<concat\>\""}], ",", 
         RowBox[{
          RowBox[{"NetPort", "[", "\"\<Input1\>\"", "]"}], "->", 
          "\"\<concat\>\""}], ",", 
         RowBox[{"\"\<concat\>\"", "->", "\"\<laterMLP\>\""}], ",", 
         RowBox[{"\"\<laterMLP\>\"", "->", "\"\<sigmaLayer\>\""}], ",", 
         RowBox[{"\"\<sigmaLayer\>\"", "->", "\"\<preFinalLayer\>\""}], ",", 
         RowBox[{"\"\<preFinalLayer\>\"", "->", "\"\<finalLayer\>\""}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Input1\>\"", "->", "posEncFeatures"}], ",", 
         RowBox[{"\"\<Input2\>\"", "->", "dirEncFeatures"}]}], "}"}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Add", " ", "any", " ", "additional", " ", "configurations", " ", "like", 
     " ", "loss", " ", "layers", " ", "or", " ", "training", " ", "method", 
     " ", "if", " ", "needed"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.924366277498529*^9, 3.924366277498941*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ef709a64-b6b5-4622-b25b-29440b82ac15"],

Cell[BoxData[
 TemplateBox[{
  "NetGraph", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"NetGraph\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 24, 1, 
   18986169561708317026, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924366279662788*^9, 3.9247865197388077`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"c0cc2f73-fba8-4a45-b0be-d529b61944cc"]
}, Open  ]]
},
WindowSize->{860.25, 1023},
WindowMargins->{{Automatic, 255.75}, {-262.5, Automatic}},
FrontEndVersion->"14.1 for Linux x86 (64-bit) (May 15, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0c69affb-9788-4156-b435-3fc8943d2082"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 708, 20, 166, "Input",ExpressionUUID->"c233de70-4eea-46e6-ae0e-8db52dc13a37"],
Cell[CellGroupData[{
Cell[1287, 44, 181, 2, 36, "Input",ExpressionUUID->"4b8c5bd3-aaf9-4e43-a407-6d047d356672"],
Cell[1471, 48, 150, 2, 83, "Output",ExpressionUUID->"3f1afec2-2171-4703-8520-713cedd08872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1658, 55, 978, 19, 152, "Input",ExpressionUUID->"6e5aaaed-7cc0-4851-b3c7-c8d0fbb72617"],
Cell[2639, 76, 43437, 859, 78, "Output",ExpressionUUID->"110d2108-2de0-4d6f-8fe9-3e370435e9fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46113, 940, 799, 18, 123, "Input",ExpressionUUID->"b68e9f52-ad09-4e8d-91a3-79a620500355"],
Cell[46915, 960, 33440, 662, 196, "Output",ExpressionUUID->"ca3182bf-7132-4902-b594-07670642d155"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80392, 1627, 373, 7, 39, "Input",ExpressionUUID->"f1120030-1a1a-4484-88ae-c57c6e8c38e5"],
Cell[80768, 1636, 65174, 1217, 78, "Output",ExpressionUUID->"5930caac-4a4a-4245-a279-633964691779"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145979, 2858, 734, 17, 94, "Input",ExpressionUUID->"5a9b8aba-7daf-4ab6-a59d-62f4305bb908"],
Cell[146716, 2877, 23463, 465, 115, "Output",ExpressionUUID->"9973b399-c4c6-46ca-86d2-890ed9f01fb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170216, 3347, 719, 18, 94, "Input",ExpressionUUID->"b7eef30c-ebc3-4230-88a0-0c5a47a28760"],
Cell[170938, 3367, 23454, 464, 115, "Output",ExpressionUUID->"b353236d-9a09-402e-a575-b67fe372ece5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194429, 3836, 1090, 24, 233, "Input",ExpressionUUID->"78551242-32bc-45b1-ac41-f3445e0f0ba7",
 CellID->481147660],
Cell[195522, 3862, 992, 19, 72, "Message",ExpressionUUID->"d79c2d4e-5434-4857-b192-9b7f9a2acdd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196551, 3886, 4567, 103, 887, "Input",ExpressionUUID->"ef709a64-b6b5-4622-b25b-29440b82ac15"],
Cell[201121, 3991, 508, 11, 32, "Message",ExpressionUUID->"c0cc2f73-fba8-4a45-b0be-d529b61944cc"]
}, Open  ]]
}
]
*)

